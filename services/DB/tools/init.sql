CREATE DATABASE IF NOT EXISTS ${DB_NAME};

CREATE USER IF NOT EXISTS '${DB_USER}'@'%' IDENTIFIED BY '${DB_PASSWORD}';
GRANT ALL PRIVILEGES ON ${DB_NAME}.* TO '${DB_USER}'@'%' IDENTIFIED BY '${DB_PASSWORD}';

ALTER USER 'root'@'localhost' IDENTIFIED BY '${SQL_ROOT_PASSWORD}';
FLUSH PRIVILEGES;

USE ${DB_NAME};

CREATE TABLE IF NOT EXISTS `user` (
	id INT AUTO_INCREMENT PRIMARY KEY,
	username VARCHAR(50) UNIQUE NOT NULL,
	email VARCHAR(100) UNIQUE NOT NULL,
	password VARCHAR(255) NOT NULL,
	avatar TEXT DEFAULT NULL,
	twoFA_enabled BOOLEAN DEFAULT FALSE,
	twoFA_secret VARCHAR(32) DEFAULT NULL,
	elo INT DEFAULT 1000 CHECK (elo >= 0),
	twoFactorSecret VARCHAR(255) DEFAULT NULL,
	is2FAEnabled BOOLEAN DEFAULT FALSE,
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	lastLogin_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
) ENGINE=InnoDB;

CREATE TABLE IF NOT EXISTS matches (
	id INT AUTO_INCREMENT PRIMARY KEY,
	is_pong_game BOOLEAN DEFAULT FALSE,
	playedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	duration_seconds INT NOT NULL DEFAULT 0
) ENGINE=InnoDB;

CREATE TABLE IF NOT EXISTS match_players (
	match_id INT NOT NULL,
	player_id INT NOT NULL,
	score INT NOT NULL DEFAULT 0,
	elo_change INT NOT NULL DEFAULT 0,
	winner BOOLEAN DEFAULT FALSE,
	PRIMARY KEY (match_id, player_id),
	FOREIGN KEY (match_id) REFERENCES matches(id) ON DELETE CASCADE,
	FOREIGN KEY (player_id) REFERENCES `user`(id) ON DELETE CASCADE
);


CREATE TABLE IF NOT EXISTS friends (
	id INT AUTO_INCREMENT PRIMARY KEY,
	user1 INT NOT NULL,
	user2 INT NOT NULL,
	status ENUM('pending', 'accepted', 'blocked') DEFAULT 'pending',
	FOREIGN KEY (user1) REFERENCES `user`(id) ON DELETE CASCADE,
	FOREIGN KEY (user2) REFERENCES `user`(id) ON DELETE CASCADE
) ENGINE=InnoDB;


